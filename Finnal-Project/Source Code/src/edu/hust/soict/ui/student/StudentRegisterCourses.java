/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.hust.soict.ui.student;

import edu.hust.soict.dao.ClassDAO;
import edu.hust.soict.logic.CheckStudentRegister;
import edu.hust.soict.objects.Student;
import edu.hust.soict.objects.Class;
import edu.hust.soict.objects.Register;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Search information students, detail courses and register class.
 *
 * @author BKHN(quangnd)
 */
public class StudentRegisterCourses extends javax.swing.JPanel {

    MainStudent mainStudent = new MainStudent();
    private final DefaultTableModel dtmMaSV;
    public final DefaultTableModel dtmLop;
    private final DefaultTableModel dtmDetailReg;
    String userlogin;
//    PreparedStatement ps, ps1, ps2;
//    ResultSet rs, rs1, rs2;
    // ArrayList<BangDiem> listbdiem = null;

    /**
     *
     * @throws SQLException
     */
    public StudentRegisterCourses() throws SQLException {
        initComponents();
        dtmMaSV = new DefaultTableModel();
        dtmLop = new DefaultTableModel();
        dtmDetailReg = new DefaultTableModel();
        dtmLop.addColumn("Mã lớp");
        dtmLop.addColumn("Bắt đầu");
        dtmLop.addColumn("Kết thúc");
        dtmLop.addColumn("Thứ");
        dtmLop.addColumn("Tuần học");
        dtmLop.addColumn("Loại lớp");
        dtmLop.addColumn("Mã môn học");
        dtmLop.addColumn("Nhóm");
        dtmLop.addColumn("Phòng học");
        dtmLop.addColumn("Đã ĐK");
        dtmLop.addColumn("Max ĐK");
        jtbLOP.setModel(dtmLop);

        dtmDetailReg.addColumn("ID");
        dtmDetailReg.addColumn("Mã sinh viên");
        dtmDetailReg.addColumn("Mã lớp ĐK");
        dtmDetailReg.addColumn("Mã môn học");
        dtmDetailReg.addColumn("Tên môn học");
        dtmDetailReg.addColumn("TC");
        jtbLOP1.setModel(dtmDetailReg);
        fetchDataFromCheckStudentRegister();
//        fetchJLabel4();
//        fetchListCourses();
//        fetchRegister();
//        new CheckStudentRegister().fetchJLabel4(userlogin);
//        new CheckStudentRegister().fetchListCourses();
//        new CheckStudentRegister().fetchRegister(userlogin);
    }

    /**
     * Creates new form Search with data loaded to Table.
     *
     * @param username
     * @throws java.sql.SQLException
     */
    public StudentRegisterCourses(String username) throws SQLException {
        initComponents();
        dtmMaSV = new DefaultTableModel();
        dtmLop = new DefaultTableModel();
        dtmDetailReg = new DefaultTableModel();

        //TIm Kiem diem theo ma sv
        dtmLop.addColumn("Mã lớp");
        dtmLop.addColumn("Bắt đầu");
        dtmLop.addColumn("Kết thúc");
        dtmLop.addColumn("Thứ");
        dtmLop.addColumn("Tuần học");
        dtmLop.addColumn("Loại lớp");
        dtmLop.addColumn("Mã môn học");
        dtmLop.addColumn("Nhóm");
        dtmLop.addColumn("Phòng học");
        dtmLop.addColumn("Đã ĐK");
        dtmLop.addColumn("Max ĐK");
        jtbLOP.setModel(dtmLop);

        dtmDetailReg.addColumn("ID");
        dtmDetailReg.addColumn("Mã sinh viên");
        dtmDetailReg.addColumn("Mã lớp ĐK");
        dtmDetailReg.addColumn("Mã môn học");
        dtmDetailReg.addColumn("Tên môn học");
        dtmDetailReg.addColumn("TC");
        jtbLOP1.setModel(dtmDetailReg);

        this.userlogin = username;
        jTextField1.setText(username);
        fetchDataFromCheckStudentRegister();
        fetchTotalFromCheckStudentRegister();
        fetchListCoursesFromCheckStudentRegister();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("quan_ly_sinh_vien?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        thongTinSinhVienQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM ThongTinSinhVien t");
        thongTinSinhVienList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : thongTinSinhVienQuery.getResultList();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jtfmaLop = new javax.swing.JTextField();
        jbtnsearchmasv = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbLOP = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtbLOP1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        setPreferredSize(new java.awt.Dimension(799, 463));

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(861, 372));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));

        jtfmaLop.setToolTipText("Tìm kiếm theo mã môn học");
        jtfmaLop.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfmaLopKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfmaLopKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfmaLopKeyReleased(evt);
            }
        });

        jbtnsearchmasv.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbtnsearchmasv.setForeground(new java.awt.Color(204, 0, 0));
        jbtnsearchmasv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/bar-chart-reload.png"))); // NOI18N
        jbtnsearchmasv.setText("Search");
        jbtnsearchmasv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnsearchmasv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnsearchmasvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jtfmaLop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnsearchmasv)
                .addGap(204, 204, 204))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jtfmaLop, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jbtnsearchmasv))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);

        jtbLOP = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        jtbLOP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12", "Title 13"
            }
        ));
        jScrollPane1.setViewportView(jtbLOP);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Mã sinh viên:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 61, 0, 0);
        jPanel7.add(jLabel1, gridBagConstraints);

        jLabel2.setForeground(new java.awt.Color(204, 0, 0));
        jLabel2.setText("Mã lớp ĐK:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 61, 0, 0);
        jPanel7.add(jLabel2, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 156;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 0);
        jPanel7.add(jTextField1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 156;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 0);
        jPanel7.add(jTextField2, gridBagConstraints);

        jButton1.setForeground(new java.awt.Color(204, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/cloud-computing.png"))); // NOI18N
        jButton1.setText("AddNew");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 46, 0, 0);
        jPanel7.add(jButton1, gridBagConstraints);

        jButton2.setForeground(new java.awt.Color(204, 0, 0));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/delete (1).png"))); // NOI18N
        jButton2.setText("Delete");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 46, 0, 0);
        jPanel7.add(jButton2, gridBagConstraints);

        jTextField3.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 156;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 12, 0, 0);
        jPanel7.add(jTextField3, gridBagConstraints);

        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("ID:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 74;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 61, 0, 0);
        jPanel7.add(jLabel3, gridBagConstraints);

        jButton4.setForeground(new java.awt.Color(204, 0, 0));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/bar-chart-reload.png"))); // NOI18N
        jButton4.setText("Reset");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 46, 17, 0);
        jPanel7.add(jButton4, gridBagConstraints);

        jLabel4.setForeground(new java.awt.Color(255, 51, 0));
        jLabel4.setText("Tổng số TC đã ĐK: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 54;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 54, 0, 51);
        jPanel7.add(jLabel4, gridBagConstraints);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(null);

        jtbLOP1 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        jtbLOP1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jtbLOP1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbLOP1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtbLOP1);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 778, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(188, 188, 188)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(119, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("COURSES", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 795, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtfmaLopKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfmaLopKeyPressed
        // TODO add your handling code here:
        // timKiemDiemTheoMaSV();
    }//GEN-LAST:event_jtfmaLopKeyPressed

    private void jtfmaLopKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfmaLopKeyReleased
        // TODO add your handling code here:
        //timKiemDiemTheoMaSV();
    }//GEN-LAST:event_jtfmaLopKeyReleased

    private void jtfmaLopKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfmaLopKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfmaLopKeyTyped

    private void jbtnsearchmasvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnsearchmasvActionPerformed

        try {
            searchClass();
        } catch (SQLException ex) {
            Logger.getLogger(StudentRegisterCourses.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnsearchmasvActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //ClassDAO cldao = new ClassDAO();
        String s = "";
        String username = jTextField1.getText();
        String malopdk = jTextField2.getText();
        if (malopdk.equals(s)) {
            JOptionPane.showMessageDialog(this.mainStudent, "Mã lớp đăng kí không được trống!", "Thông báo!", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                Register rg = new Register(username, malopdk);
                boolean checkAddNew = new CheckStudentRegister().addRegister(rg);
                if(checkAddNew == true){
                JOptionPane.showMessageDialog(this.mainStudent, "Đã đăng kí thành công mã lớp!", "Thông báo!", JOptionPane.INFORMATION_MESSAGE);
                fetchDataFromCheckStudentRegister();//from control
                fetchTotalFromCheckStudentRegister();
                }
                else{
                JOptionPane.showMessageDialog(this.mainStudent, "Hãy xem lại!", "Thông báo!", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (SQLException ex) {
                Logger.getLogger(StudentRegisterCourses.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * Delete courses registered.
     *
     * @param evt event action performed when clicked button Delete Course
     * registered.
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int row = jtbLOP1.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this.mainStudent, "Bạn chưa chọn lớp cần xóa!", "Thông báo!", JOptionPane.WARNING_MESSAGE);
        } else {
            int b = JOptionPane.showConfirmDialog(this.mainStudent, "Bạn chắc chắn muốn xóa dữ liệu này?", "Thông Báo", JOptionPane.YES_NO_OPTION);
            if (b == JOptionPane.YES_OPTION) {
                try {
                    String idLopDK = jTextField3.getText();
                    new ClassDAO().deleteRegister(idLopDK);
                    //jLabel4.removeAll();
                    new CheckStudentRegister().fetchTotalRegister(userlogin);
                    //new CheckStudentRegister().fetchRegister(userlogin);
                } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(StudentRegisterCourses.class.getName()).log(Level.SEVERE, null, ex);
                }
                resetForm1();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    /**
     * Get value from table Register to Text Fields.
     *
     * @param evt event action performed when clicked table Register Courses.
     */
    private void jtbLOP1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbLOP1MouseClicked
        // TODO add your handling code here:
        jTextField3.setText(jtbLOP1.getValueAt(jtbLOP1.getSelectedRow(), 0).toString());
        jTextField1.setText(jtbLOP1.getValueAt(jtbLOP1.getSelectedRow(), 1).toString());
        jTextField2.setText(jtbLOP1.getValueAt(jtbLOP1.getSelectedRow(), 2).toString());
        jButton1.setEnabled(false);
        jButton2.setEnabled(true);
//        jButtonDelete.setEnabled(true);
//        jButtonUpdate.setEnabled(true);
//        jButtonReset.setEnabled(true);
        jTextField3.setEditable(false);
        jTextField2.setEditable(false);
    }//GEN-LAST:event_jtbLOP1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.resetForm();
    }//GEN-LAST:event_jButton4ActionPerformed


    private static Object[] toObjectData(Student sv) {
        Object[] objectData = {sv.getId_sinh_vien(), sv.getTen_sinh_vien(), sv.getLop_hoc(),
            sv.getChuong_trinh_DT(), sv.getNgay_sinh(), sv.getHe_hoc(), sv.getKhoa(), sv.getEmail(), sv.getTrang_thai()};
        return objectData;
    }

    public void searchClass() throws SQLException {
        while (dtmLop.getRowCount() > 0) {
            dtmLop.removeRow(0);
        }
        String maLop = jtfmaLop.getText();
        ArrayList<Class> list = null;
        CheckStudentRegister checkStudentRegister = new CheckStudentRegister();
        if (maLop != null && maLop.trim().length() > 0) {
            list = checkStudentRegister.searchClassById(maLop);
            for (Class cl : list) {
                dtmLop.addRow(toOjectClass(cl));
            }
        } 
        else {
            list = checkStudentRegister.searchClassById(maLop);
            for (Class cl : list) {
                dtmLop.addRow(toOjectClass(cl));
            }
        }

    }
    /**
     *
     * @param cl
     * @return objects (column of table)
     */
    public static Object[] toOjectClass(Class cl) {
        Object[] objects = {cl.getMa_lop_DK(), cl.getBat_dau(), cl.getKet_thuc(), cl.getThu(), cl.getTuan_hoc(), cl.getLoai_lop(), cl.getMa_mon_hoc(), cl.getNhom(), cl.getPhong_hoc(), cl.getDa_DK(), cl.getMax_DK()};
        return objects;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTabbedPane jTabbedPane1;
    public javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    public javax.swing.JTextField jTextField3;
    private javax.swing.JButton jbtnsearchmasv;
    public javax.swing.JTable jtbLOP;
    public javax.swing.JTable jtbLOP1;
    public javax.swing.JTextField jtfmaLop;
    private java.util.List<edu.hust.soict.objects.ThongTinSinhVien> thongTinSinhVienList;
    private javax.persistence.Query thongTinSinhVienQuery;
    // End of variables declaration//GEN-END:variables

    private void resetForm1() {
        jTextField2.setText("");
    }

//    private static Object[] toObjectStudentRegister(Register sv) {
//        Object[] objects = {sv.getIdDKLop(), sv.getMaSinhVienDK(), sv.getMaLopDK()};
//        return objects;
//
//    }

    private void resetForm() {
        jTextField3.setText("");
        jTextField2.setText("");
        jButton1.setEnabled(true);
        jButton2.setEnabled(false);
        jTextField2.setEditable(true);
        //jTextField3.setEditable(true);
    }
    
    private void fetchListCoursesFromCheckStudentRegister() throws SQLException {
                CheckStudentRegister checkStudentRegister = new CheckStudentRegister();
                ResultSet rs = checkStudentRegister.fetchListCourses();
                while (jtbLOP.getRowCount() > 0) {
                    ((DefaultTableModel) jtbLOP.getModel()).removeRow(0);
                }
                int col = rs.getMetaData().getColumnCount();
                while (rs.next()) {
                    Object[] rows = new Object[col];
                    for (int i = 1; i <= col; i++) {
                        rows[i - 1] = rs.getObject(i);
                    }
                    ((DefaultTableModel) jtbLOP.getModel()).insertRow(rs.getRow() - 1, rows);
                }
        }

    private void fetchDataFromCheckStudentRegister() throws SQLException {
               CheckStudentRegister checkStudentRegister = new CheckStudentRegister();
                ResultSet rs = checkStudentRegister.fetchDataAfterAddRegister(userlogin);
                    while (jtbLOP1.getRowCount() > 0) {
                        ((DefaultTableModel) jtbLOP1.getModel()).removeRow(0);
                    }
                    int col = rs.getMetaData().getColumnCount();
                    while (rs.next()) {
                        Object[] rows = new Object[col];
                        for (int i = 1; i <= col; i++) {
                            rows[i - 1] = rs.getObject(i);
                        }
                        ((DefaultTableModel) jtbLOP1.getModel()).insertRow(rs.getRow() - 1, rows);
                    }
    }
    
    private void fetchTotalFromCheckStudentRegister() throws SQLException {
               CheckStudentRegister checkStudentRegister = new CheckStudentRegister();
                int rs = checkStudentRegister.fetchTotalRegister(userlogin);
                String string = "Tổng số TC đã ĐK:";
                jLabel4.setText(string + rs);
    }
}
