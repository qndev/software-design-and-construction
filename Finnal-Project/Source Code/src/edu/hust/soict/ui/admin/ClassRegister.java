/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.hust.soict.ui.admin;

import edu.hust.soict.dao.ClassDAO;
import edu.hust.soict.dao.DBConnect;
import edu.hust.soict.logic.Check;
import edu.hust.soict.objects.MakeCourses;
import edu.hust.soict.util.ExportData;
import java.awt.Toolkit;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author quangnd
 */
public class ClassRegister extends javax.swing.JFrame {

    private final DefaultTableModel dtmRegister;

    /**
     * Creates new form ClassRegister
     */
    public ClassRegister() {
        initComponents();
        dtmRegister = new DefaultTableModel();
        dtmRegister.addColumn("Mã lớp");
        dtmRegister.addColumn("Bắt đầu");
        dtmRegister.addColumn("Kết thúc");
        dtmRegister.addColumn("Thứ");
        dtmRegister.addColumn("Tuần học");
        dtmRegister.addColumn("Loại lớp");
        dtmRegister.addColumn("Mã môn học");
        dtmRegister.addColumn("Nhóm");
        dtmRegister.addColumn("Phòng học");
        dtmRegister.addColumn("Học kì");
        dtmRegister.addColumn("Đã ĐK");
        dtmRegister.addColumn("Max ĐK");
        dtmRegister.addColumn("Thời hạn ĐK");
        jTable1.setModel(dtmRegister);
        reSet();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTimeChooserDemo1 = new lu.tudor.santec.jtimechooser.demo.JTimeChooserDemo();
        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("quan_ly_sinh_vien?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        monHocQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT m.idMonHoc FROM MonHoc m");
        monHocList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : monHocQuery.getResultList();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quản lý đăng kí lớp học.");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setLayout(new java.awt.GridLayout(4, 6));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Mã lớp* : ");
        jPanel2.add(jLabel1);
        jPanel2.add(jTextField1);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Thời hạn ĐK* : ");
        jPanel2.add(jLabel2);

        jDateChooser1.setToolTipText("yyyy-MM-dd Ex:2018-12-31");
        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jPanel2.add(jDateChooser1);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Mã môn học* : ");
        jPanel2.add(jLabel4);

        jPanel2.add(jComboBox1);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Loại lớp* : ");
        jPanel2.add(jLabel5);

        jTextField2.setToolTipText("LT+BT (TN nếu có)");
        jPanel2.add(jTextField2);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Thứ* : ");
        jPanel2.add(jLabel6);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "3", "4", "5", "6" }));
        jPanel2.add(jComboBox2);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Bắt đầu* : ");
        jPanel2.add(jLabel7);

        jTextField5.setText("HH:mm:ss");
        jTextField5.setToolTipText("HH:mm:ss - Ex: 12:30:00 ");
        jPanel2.add(jTextField5);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Max ĐK* : ");
        jPanel2.add(jLabel8);

        jTextField4.setToolTipText("Số lượng sinh viên tối đa một lớp");
        jPanel2.add(jTextField4);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Tuần học* : ");
        jPanel2.add(jLabel9);
        jPanel2.add(jTextField3);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Kết thúc* : ");
        jPanel2.add(jLabel10);

        jTextField7.setText("HH:mm:ss");
        jTextField7.setToolTipText("HH:mm:ss - Ex: 15:30:00 ");
        jPanel2.add(jTextField7);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Phòng học* : ");
        jPanel2.add(jLabel11);
        jPanel2.add(jTextField6);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Nhóm* : ");
        jPanel2.add(jLabel3);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TC" }));
        jComboBox4.setSelectedIndex(-1);
        jComboBox4.setToolTipText("Lớp sinh viên hoặc nhóm TC");
        jPanel2.add(jComboBox4);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Học kì* : ");
        jPanel2.add(jLabel12);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "20181", "20182", "20183", "20191", "20192", "20193", "20201", "20202", "20203", "20211", "20212", "20213", "20221", "20222", "20223", "20231", "20232", "20233", "20241", "20242", "20243", "20251", "20252", "20253" }));
        jPanel2.add(jComboBox3);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButton1.setForeground(new java.awt.Color(204, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/add.png"))); // NOI18N
        jButton1.setText("Add new");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 184, 0, 0);
        jPanel3.add(jButton1, gridBagConstraints);

        jButton2.setForeground(new java.awt.Color(204, 0, 0));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/refresh.png"))); // NOI18N
        jButton2.setText("Update");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 86, 0, 0);
        jPanel3.add(jButton2, gridBagConstraints);

        jButton3.setForeground(new java.awt.Color(204, 0, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/delete (1).png"))); // NOI18N
        jButton3.setText("Delete");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 22;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 184, 1, 0);
        jPanel3.add(jButton3, gridBagConstraints);

        jButton4.setForeground(new java.awt.Color(204, 0, 0));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/bar-chart-reload.png"))); // NOI18N
        jButton4.setText("Reset");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 86, 1, 0);
        jPanel3.add(jButton4, gridBagConstraints);

        jButton5.setForeground(new java.awt.Color(204, 0, 0));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/fileexport.png"))); // NOI18N
        jButton5.setText("Export");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 67, 0, 136);
        jPanel3.add(jButton5, gridBagConstraints);

        jButton6.setForeground(new java.awt.Color(204, 0, 0));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/cloud-computing.png"))); // NOI18N
        jButton6.setText("Search");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 67, 1, 136);
        jPanel3.add(jButton6, gridBagConstraints);

        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12", "Title 13"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        jTextField1.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        jTextField2.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
        jTextField3.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        jTextField4.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 11).toString());
        jTextField6.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString());
        jTextField5.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        jTextField7.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        jComboBox1.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
        jComboBox2.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        jComboBox3.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 9).toString());
        jComboBox4.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString());
        jDateChooser1.setDate((Date) jTable1.getValueAt(jTable1.getSelectedRow(), 12));

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        reSet2();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String s = null;
        ClassDAO cldao = new ClassDAO();
        String maLop = jTextField1.getText();
        String loaiLop = jTextField2.getText();
        String string = jTextField4.getText();
        int maxDK = Integer.parseInt(string);
        String phongHoc = jTextField6.getText();
        Date hanDK = jDateChooser1.getDate();
        if (hanDK == null) {
            JOptionPane.showMessageDialog(this, "Thời hạn đăng kí không được trống!", "Hãy nhập lại", JOptionPane.WARNING_MESSAGE);
            jDateChooser1.requestFocus();
            return;
        }
        java.sql.Date sqlDate = new java.sql.Date(hanDK.getTime());
        String thu = (String) jComboBox2.getSelectedItem();
        String tuanHoc = jTextField3.getText();
        String nhom = (String) jComboBox4.getSelectedItem();
        String maMonHoc = (String) jComboBox1.getSelectedItem();
        String batDau = jTextField5.getText();
        String KetThuc = jTextField7.getText();
        String hocki = (String) jComboBox3.getSelectedItem();
        if (!checkinfo()) {
            return;
        }
        MakeCourses rg = new MakeCourses(maLop, batDau, KetThuc, thu, tuanHoc, loaiLop, maMonHoc, nhom, phongHoc, maxDK, hocki, sqlDate);
       // MakeCourses insert = cldao.addNewCourses(rg);
        reSet2();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        ExportData export = new ExportData();
        export.exportExcel(jTable1);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(ClassRegister.this, "Bạn chưa chọn lớp cần xóa!", "Thông báo!", JOptionPane.WARNING_MESSAGE);
        } else {
            int b = JOptionPane.showConfirmDialog(ClassRegister.this, "Bạn chắc chắn muốn xóa dữ liệu này?", "Thông báo!", JOptionPane.YES_NO_OPTION);
            if (b == JOptionPane.YES_OPTION) {
                String malop = jTextField1.getText();
                new ClassDAO().deleteCourses(malop);
                reSet();
            }
            //ResetForm();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();

        // make sure a row is selected
        if (row < 0) {
            JOptionPane.showMessageDialog(ClassRegister.this, "Bạn chưa chọn Lớp cần thay đổi!", "Thông báo!",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        String maLop = jTextField1.getText();
        String loaiLop = jTextField2.getText();
        String string = jTextField4.getText();
        int maxDK = Integer.parseInt(string);
        String phongHoc = jTextField6.getText();
        Date hanDK = jDateChooser1.getDate();
        if (hanDK == null) {
            JOptionPane.showMessageDialog(this, "Thời hạn đăng kí không được trống!", "Hãy nhập lại", JOptionPane.WARNING_MESSAGE);
            jDateChooser1.requestFocus();
        }
        java.sql.Date sqlDate = new java.sql.Date(hanDK.getTime());
        String thu = (String) jComboBox2.getSelectedItem();
        String tuanHoc = jTextField3.getText();
        String nhom = (String) jComboBox4.getSelectedItem();
        String maMonHoc = (String) jComboBox1.getSelectedItem();
        String batDau = jTextField5.getText();
        String KetThuc = jTextField7.getText();
        String hocki = (String) jComboBox3.getSelectedItem();
        MakeCourses courses = new MakeCourses(maLop, batDau, KetThuc, thu, tuanHoc, loaiLop, maMonHoc, nhom, phongHoc, maxDK, hocki, sqlDate);
        boolean update = new ClassDAO().updateCourses(courses);
        if (update == true) {
            JOptionPane.showMessageDialog(ClassRegister.this, "Đã cập nhật dữ liệu thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            reSet2();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        getDataFromSearch();
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClassRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClassRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClassRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClassRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClassRegister().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private lu.tudor.santec.jtimechooser.demo.JTimeChooserDemo jTimeChooserDemo1;
    private java.util.List<edu.hust.soict.objects.MonHoc> monHocList;
    private javax.persistence.Query monHocQuery;
    // End of variables declaration//GEN-END:variables

    private void reSet() {
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField4.setText("");
        jTextField6.setText("");
        jTextField3.setText("");
        jTextField5.setText("HH:mm:ss");
        jTextField7.setText("HH:mm:ss");
        jDateChooser1.setDate(null);
        jComboBox1.setSelectedIndex(-1);
        jComboBox2.setSelectedIndex(0);
        jComboBox3.setSelectedIndex(0);
        jComboBox4.setSelectedIndex(0);
        jTextField1.requestFocus();
        PreparedStatement ps, ps1, ps2;
        ResultSet rs, rs1, rs2;
        if (DBConnect.open()) {
            try {
                ps = DBConnect.cnn.prepareStatement("SELECT ma_lop_mo_DK, thoi_gian_bat_dau, thoi_gian_ket_thuc, thu, tuan_hoc, loai_lop, id_mon_hoc_DK, nhom, phong_hoc, hoc_ki, so_luong_da_dang_ki, so_luong_max_DK, date_to_exist FROM danh_sach_lop_mo_DK");
                rs = ps.executeQuery();
                ps1 = DBConnect.cnn.prepareStatement("SELECT * FROM search");
                rs1 = ps1.executeQuery();
                ps2 = DBConnect.cnn.prepareStatement("SELECT id_mon_hoc FROM mon_hoc");
                rs2 = ps2.executeQuery();
                while (rs1.next()) {
                    jComboBox4.addItem(rs1.getString(1));
                }
                while (rs2.next()) {
                    jComboBox1.addItem(rs2.getString(1));
                }
                while (jTable1.getRowCount() > 0) {
                    ((DefaultTableModel) jTable1.getModel()).removeRow(0);
                }
                int col = rs.getMetaData().getColumnCount();
                while (rs.next()) {
                    Object[] rows = new Object[col];
                    for (int i = 1; i <= col; i++) {
                        rows[i - 1] = rs.getObject(i);
                    }
                    ((DefaultTableModel) jTable1.getModel()).insertRow(rs.getRow() - 1, rows);
                }
                rs.close();
            } catch (SQLException e) {
                Logger.getLogger(Tuition.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }

    private void setIcon() {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/edu/hust/soict/resources/HUST.png")));
    }

    private boolean checkinfo() {
        Check c = new Check();
        String string = jTextField4.getText();
        int maxDK = Integer.parseInt(string);
        Date hanDK = jDateChooser1.getDate();
        java.sql.Date sqlDate = new java.sql.Date(hanDK.getTime());
        if (!c.checkIDCourses(jTextField1.getText()) || !c.check(jTextField1.getText())) {
            JOptionPane.showMessageDialog(this, "Mã lớp phải có độ dài 6 kí tự và chỉ chứa các kí tự [^0-9]!", "Hãy nhập lại", JOptionPane.WARNING_MESSAGE);
            jTextField1.setText("");
            jTextField1.requestFocus();
            return false;
        } else if (!c.check(jTextField2.getText())) {
            JOptionPane.showMessageDialog(this, "Các trường dữ liệu không được trống!", "Hãy nhập lại", JOptionPane.WARNING_MESSAGE);
            jTextField2.requestFocus();
            return false;
        } else if (!c.check(jTextField3.getText())) {
            JOptionPane.showMessageDialog(this, "Các trường dữ liệu không được trống!", "Hãy nhập lại", JOptionPane.WARNING_MESSAGE);
            jTextField3.requestFocus();
            return false;
        } else if (!c.check(jTextField6.getText())) {
            JOptionPane.showMessageDialog(this, "Các trường dữ liệu không được trống!", "Hãy nhập lại", JOptionPane.WARNING_MESSAGE);
            jTextField6.requestFocus();
            return false;
        } else if (maxDK <= 0 || maxDK > 200 || string == null) {
            JOptionPane.showMessageDialog(this, "Số lượng sinh viên một lớp không hợp lệ!", "Hãy nhập lại", JOptionPane.WARNING_MESSAGE);
            jTextField4.requestFocus();
            return false;
        }

        return true;
    }

    private void getDataFromSearch() {

        if (DBConnect.open()) {
            PreparedStatement psSearch = null;
            ResultSet rsSearch = null;
            String s = (String) jComboBox4.getSelectedItem();
            if (DBConnect.open()) {
                try {
                    psSearch = DBConnect.cnn.prepareStatement("SELECT ma_lop_mo_DK, thoi_gian_bat_dau, thoi_gian_ket_thuc, thu, tuan_hoc, loai_lop, id_mon_hoc_DK, nhom, phong_hoc, hoc_ki, so_luong_da_dang_ki, so_luong_max_DK, date_to_exist FROM danh_sach_lop_mo_DK WHERE nhom=?");
                    psSearch.setString(1, s);
                    rsSearch = psSearch.executeQuery();
                    while (jTable1.getRowCount() > 0) {
                        ((DefaultTableModel) jTable1.getModel()).removeRow(0);
                    }
                    int col = rsSearch.getMetaData().getColumnCount();
                    while (rsSearch.next()) {
                        Object[] rows = new Object[col];
                        for (int i = 1; i <= col; i++) {
                            rows[i - 1] = rsSearch.getObject(i);
                        }
                        ((DefaultTableModel) jTable1.getModel()).insertRow(rsSearch.getRow() - 1, rows);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(CreateStudentInfomation.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    DBConnect.close(psSearch, rsSearch);
                }
            }
        }
    }

    private void reSet2() {
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField4.setText("");
        jTextField6.setText("");
        jTextField3.setText("");
        jTextField5.setText("HH:mm:ss");
        jTextField7.setText("HH:mm:ss");
        jDateChooser1.setDate(null);
        jComboBox1.setSelectedIndex(0);
        jComboBox2.setSelectedIndex(0);
        jComboBox3.setSelectedIndex(0);
        jComboBox4.setSelectedIndex(0);
        jTextField1.requestFocus();
        PreparedStatement ps;
        ResultSet rs;
        if (DBConnect.open()) {
            try {
                ps = DBConnect.cnn.prepareStatement("SELECT ma_lop_mo_DK, thoi_gian_bat_dau, thoi_gian_ket_thuc, thu, tuan_hoc, loai_lop, id_mon_hoc_DK, nhom, phong_hoc, hoc_ki, so_luong_da_dang_ki, so_luong_max_DK, date_to_exist FROM danh_sach_lop_mo_DK");
                rs = ps.executeQuery();
//                ps1 = DBConnect.cnn.prepareStatement("SELECT * FROM search");
//                rs1 = ps1.executeQuery();
                while (jTable1.getRowCount() > 0) {
                    ((DefaultTableModel) jTable1.getModel()).removeRow(0);
                }
                int col = rs.getMetaData().getColumnCount();
                while (rs.next()) {
                    Object[] rows = new Object[col];
                    for (int i = 1; i <= col; i++) {
                        rows[i - 1] = rs.getObject(i);
                    }
                    ((DefaultTableModel) jTable1.getModel()).insertRow(rs.getRow() - 1, rows);
                }
                rs.close();
            } catch (SQLException e) {
                Logger.getLogger(Tuition.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }
}
