/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.hust.soict.ui;

import edu.hust.soict.dao.AddUserDAO;
import edu.hust.soict.dao.DBConnect;
import edu.hust.soict.logic.CheckLogin;
import edu.hust.soict.objects.AddUser;
import edu.hust.soict.ui.admin.Main;
import edu.hust.soict.logic.PasswordUtils;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.beans.PropertyChangeEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 * Class form admin login.
 *
 * @author BKHN
 */
public class AdminLogin extends javax.swing.JFrame {

    Connection con;
    ResultSet rs;
    PreparedStatement ps;
    private AddUserDAO userDAO;

    /**
     *
     * @param theUserDAO
     */
    public void setUserDAO(AddUserDAO theUserDAO) {
        userDAO = theUserDAO;
    }

    /**
     * Creates new form frmLogin
     */
    public AdminLogin() {
        initComponents();
        //this.setLocationRelativeTo(null);
        jProgressBar1.setVisible(false);
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jbLogin = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();
        jtfUsername = new javax.swing.JTextField();
        jpPassword = new javax.swing.JPasswordField();
        jProgressBar1 = new javax.swing.JProgressBar();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Admin Login");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/HUST.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ADMIN FORM LOGIN");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Username:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Password:");

        jbLogin.setBackground(new java.awt.Color(204, 0, 0));
        jbLogin.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbLogin.setForeground(new java.awt.Color(255, 255, 255));
        jbLogin.setText("Login");
        jbLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLoginActionPerformed(evt);
            }
        });
        jbLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jbLoginKeyReleased(evt);
            }
        });

        jbCancel.setBackground(new java.awt.Color(204, 0, 0));
        jbCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbCancel.setForeground(new java.awt.Color(255, 255, 255));
        jbCancel.setText("Exit");
        jbCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });
        jbCancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jbCancelKeyReleased(evt);
            }
        });

        jtfUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfUsernameActionPerformed(evt);
            }
        });
        jtfUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfUsernameKeyReleased(evt);
            }
        });

        jpPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpPasswordActionPerformed(evt);
            }
        });
        jpPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jpPasswordKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(151, Short.MAX_VALUE)
                .addComponent(jbLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(48, 48, 48)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                        .addGap(41, 41, 41))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpPassword)
                            .addComponent(jtfUsername))
                        .addGap(36, 36, 36))))
            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jpPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbLogin)
                    .addComponent(jbCancel))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLoginActionPerformed
        try {
            // TODO add your handling code here:
            String user = jtfUsername.getText();
            String getPasswordTextField = jpPassword.getText();
            String role = "admin";
            AddUser addUser = new AddUser(user, getPasswordTextField, role);
            CheckLogin check = new CheckLogin();
            boolean checkResult = check.checkAdminLogin(addUser);
            if (checkResult == true) {
                JOptionPane.showMessageDialog(AdminLogin.this,
                        "Đăng nhập thành công!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                dispose();
            } else if (check.checkInputNullAccount(user, getPasswordTextField) == true) {
                JOptionPane.showMessageDialog(AdminLogin.this,
                        "Tên đăng nhập và mật khẩu không được trống!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbLoginActionPerformed

    private void jtfUsernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfUsernameKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jpPassword.requestFocus();

        }
    }//GEN-LAST:event_jtfUsernameKeyReleased

    private void jpPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpPasswordKeyReleased
        // TODO add your handling code here:
//        if (evt.getKeyCode() == evt.VK_ENTER) {
//            try {
//                send();
//            } catch (SQLException ex) {
//                Logger.getLogger(AdminLogin.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
    }//GEN-LAST:event_jpPasswordKeyReleased

    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
        // TODO add your handling code here:
        MainLogin login = new MainLogin();
        login.setVisible(true);
        dispose();
    }//GEN-LAST:event_jbCancelActionPerformed

    private void jbLoginKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbLoginKeyReleased
        // TODO add your handling code here:
//        if (evt.getKeyCode() == evt.VK_ENTER) {
//            try {
//                send();
//            } catch (SQLException ex) {
//                Logger.getLogger(AdminLogin.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
    }//GEN-LAST:event_jbLoginKeyReleased

    private void jbCancelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbCancelKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            System.exit(0);
        }
    }//GEN-LAST:event_jbCancelKeyReleased

    private void jtfUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfUsernameActionPerformed

    private void jpPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jpPasswordActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AdminLogin().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbLogin;
    public javax.swing.JPasswordField jpPassword;
    public javax.swing.JTextField jtfUsername;
    // End of variables declaration//GEN-END:variables
    /**
     * Set image icon for application.
     */
    private void setIcon() {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/edu/hust/soict/resources/HUST.png")));
    }

    //set processbar when user login and wait for system authentication user and password
    /**
     *
     */
    public class BackgroundWorker extends SwingWorker<Void, Void> {

        /**
         *
         */
        public BackgroundWorker() {
            addPropertyChangeListener((PropertyChangeEvent evt) -> {
                jProgressBar1.setValue(getProgress());
            });
        }

        @Override
        protected void done() {
            if (jProgressBar1.getValue() == 100 || jProgressBar1.getValue() == 0) {
                JOptionPane.showMessageDialog(AdminLogin.this,
                        "Đã có lỗi xảy ra, vui lòng đăng nhập lại!", "Thông báo", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(AdminLogin.this,
                        "Bạn đã đăng nhập thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }

            //jbLogin.setEnabled(true);
        }

        @Override
        protected Void doInBackground() throws Exception {
            try {
                String strnull = "";
                String user = jtfUsername.getText();
                String pass = jpPassword.getText();
                String role = "admin";
                if (user.equals(strnull) || pass.equals(strnull)) {
                    JOptionPane.showMessageDialog(AdminLogin.this, "Tên đăng nhập và mật khẩu không được trống!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                    resetForm();
                    //System.exit(0);
                } else if (DBConnect.open()) {
                    try {
                        ps = DBConnect.cnn.prepareStatement("select user_name, password, is_admin from dang_nhap");
                        //ps1 = DBConnect.cnn.prepareStatement("SELECT user_name FROM dang_nhap");
                        rs = ps.executeQuery();
                        rs.last();
                        int count = rs.getRow();
                        rs.beforeFirst();
                        while (rs.next()) {
                            int i = rs.getRow();
                            String username = rs.getString(1);
                            String getPasswordDatabase = rs.getString(2);
                            String is_admin = rs.getString(3);

                            boolean encryptedPassword = PasswordUtils.checkPassword(pass, getPasswordDatabase);
                            if ((user.equals(username)) && (encryptedPassword == true) && (role.equals(is_admin))) {
                                new Main().setVisible(true);
                                setProgress((int) ((i * 100) / count));
                                Thread.sleep(10);
                                dispose();
                                break;
                            }
                            setProgress((int) ((i * 100) / count));
                            Thread.sleep(10);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(StudentsLogin.class
                                .getName()).log(Level.SEVERE, null, ex);
                    }
                }

            } catch (HeadlessException | InterruptedException e) {
                // TODO Auto-generated catch block
            }

            return null;
        }

    }

    /**
     * Reset username field and password field when login error.
     */
    public void resetForm() {
        jtfUsername.setText("");
        jpPassword.setText("");
        jtfUsername.requestFocus();
    }

}
